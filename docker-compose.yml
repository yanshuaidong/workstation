services:
  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: futures-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
      # SSL证书目录（如果需要HTTPS）
      # - ./nginx/ssl:/etc/ssl:ro
    depends_on:
      - workfront
      - automysqlback
    restart: unless-stopped
    networks:
      - futures-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端服务
  workfront:
    build:
      context: ./workfront
      dockerfile: Dockerfile
      # 构建时的内存限制（降低以适应低配置）
      shm_size: 256m
    container_name: futures-frontend
    expose:
      - "80"
    # 运行时内存限制（优化后）
    mem_limit: 256m
    memswap_limit: 512m
    restart: unless-stopped
    networks:
      - futures-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 60s  # 增加检查间隔
      timeout: 15s
      retries: 2

  # Selenium Chrome服务已移除 - 爬虫功能已迁移到 spiderx 项目（本地运行）

  # 后端API服务
  automysqlback:
    build:
      context: ./automysqlback
      dockerfile: Dockerfile
      # 构建时的内存限制（适合小内存服务器）
      shm_size: 256mb
    container_name: futures-backend
    expose:
      - "7001"
    # 运行时资源限制（优化后）
    mem_limit: 768m
    memswap_limit: 1g
    shm_size: 256mb
    environment:
      - ENVIRONMENT=production
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      # 数据库配置通过环境变量传入
      - DB_HOST=${DB_HOST:-rm-bp1u701yzm0y42oh1vo.mysql.rds.aliyuncs.com}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER:-ysd}
      - DB_PASSWORD=${DB_PASSWORD:-Yan1234567}
      - DB_DATABASE=${DB_DATABASE:-futures}
    volumes:
      # 挂载日志目录
      - ./logs/backend:/app/logs
      # 挂载环境配置文件
      - ./.env:/app/.env
    restart: unless-stopped
    networks:
      - futures-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7001/api/settings"]
      interval: 30s  # 减少检查间隔
      timeout: 10s
      retries: 3
      start_period: 120s  # 增加启动等待时间

# Docker监控管理面板 - 已停用以节省内存
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   container_name: futures-portainer
  #   expose:
  #     - "9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - futures-network

networks:
  futures-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  nginx-logs:
  backend-logs:
  # portainer_data:  # 已停用portainer
